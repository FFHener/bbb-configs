---
- name: Create Download directory
  file:
    path: "{{ imagebuilder_dir }}"
    state: directory
  run_once: yes

- name: set destination path for imagebuilder
  set_fact:
    imagebuilder_path: "{{ imagebuilder_dir }}/{{ imagebuilder | basename }}"

- name: Download Imagebuilder if upstream is newer
  command:
    chdir: "{{ imagebuilder_dir }}"
    argv:
      - "wget"
      - "-N"
      - "{{ imagebuilder }}"

- name: Clear workdir
  file:
    state: absent
    path: "{{ imagebuild_dir }}"

- name: (Re)-Create workdir
  file:
    state: directory
    path: "{{ imagebuild_dir }}"

- name: Extract imagebuilder
  unarchive:
    src: "{{ imagebuilder_path }}"
    dest: "{{ imagebuild_dir }}"
    extra_opts: ['--strip=1']

- name: Read instruction set
  shell:
    chdir: "{{ imagebuild_dir }}"
    cmd: "grep 'openwrt_base' repositories.conf | awk -F'/' '{print $8}'"
  register: instr_set_result

- name: Insert falter feed
  lineinfile:
    path: "{{ imagebuild_dir }}/repositories.conf"
    line: "{{ feed | replace('__INSTR_SET__', instr_set_result.stdout_lines|first) | replace('__FEED_VERSION__', feed_version) }}"

- name: Run Imagebuilder
  command:
    chdir: "{{ imagebuild_dir }}"
    argv:
      - "make"
      - "image"
      - "PROFILE={{ model }}"
      - "PACKAGES={{ packages | join(' ') }}"
      - "DISABLED_SERVICES={{ disabled_services | join(' ') }}"
      - "FILES={{ config_path }}"
  register: output

- name: Clear imagedir
  file:
    state: absent
    path: "{{ image_dir}}"

- name: (Re)-Create image dir
  file:
    state: directory
    path: "{{ image_dir }}"
  run_once: yes

- name: Write build log to output dir
  copy:
    content: "{{ output.stdout }}"
    dest: "{{ image_dir }}/{{ inventory_hostname }}.log"

- name: Declare some var
  set_fact:
    image: "{{ image_dir }}/{{ inventory_hostname }}.bin"

- name: Copy Image to Image dir
  shell:
    cmd: "cp {{ imagebuild_dir }}/bin/*/*/*/*-sysupgrade.bin {{ image }}"
