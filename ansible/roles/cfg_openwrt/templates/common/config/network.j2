#jinja2: trim_blocks: "true", lstrip_blocks: "true"
{% set profile = wireless_profiles | selectattr('name', 'equalto', wireless_profile) | list | first %}
{% set wifi_networks = profile | json_query('ifaces[].network') | default([], true) %}

config interface 'loopback'
	option ifname 'lo'
	option proto 'static'
	option ipaddr '127.0.0.1'
	option netmask '255.0.0.0'
	option dns '{{ dns_servers | join(' ') }}'

{% if switch_ports|default(0) > 0 %}
config switch
	option name 'switch0'
	option reset '1'
	option enable_vlan '1'

  {% for network in networks %}
    {% set portmapping = [] %}
    {% for port in range(switch_ports)|list|difference(switch_ignore_ports) %}
      {% set tagged = not network.get('untagged') or port == switch_int_port %}
      {{ portmapping.append(port|string + "t" if tagged else "") }}
    {%- endfor %}

config switch_vlan
	option device 'switch0'
	option vlan '{{ network['vid'] }}'
	option ports '{{ portmapping|join(' ') }}'
  {% endfor %}
{% endif %}

{% for network in networks %}
  {% set name = network['name'] if 'name' in network else network['role'] %}
  {% if inventory_hostname in network['assignments'] or name in wifi_networks %}
config interface '{{ name }}'
	option proto 'static'
	option ifname '{{ int_port }}.{{ network['vid'] }}'
    {% if inventory_hostname in network['assignments'] %}
	option ipaddr '{{ network['prefix'] | ipaddr(network['assignments'][inventory_hostname]) }}'
        {% if network.get('enforce_client_isolation') %}
	option macaddr '02:00:00:00:00:01'
        {% endif %}
    {% elif name in wifi_networks %}
        option type 'bridge'
    {% endif %}
  {% endif %}

{% endfor %}
